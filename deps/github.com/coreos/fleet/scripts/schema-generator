#!/bin/bash -eu

IN="schema/v1.json"
OUT="schema/v1-json.go"
GEN="schema/v1-gen.go"
TMPGEN="/tmp/v1-gen.go"
TMPLIC="/tmp/lichdr.txt"

# See scripts/schema_generator_import.go for instructions on updating the dependency
PKG="google.golang.org/api/google-api-go-generator"

# The default license header for *.go files
LICHDR="// Copyright 2016 The fleet Authors
//
// Licensed under the Apache License, Version 2.0 (the \"License\");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an \"AS IS\" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
"

# Prepend the license header to v1-json.go
echo "${LICHDR}" > "${OUT}"

# First, write the discovery document into a go file so it can be served statically by the API
cat << 'EOF' >> "${OUT}"
package schema

//
// This file is automatically generated by scripts/schema-generator
//
// **** DO NOT EDIT ****
//
EOF

echo -n 'const DiscoveryJSON = `' >> ${OUT}
cat ${IN} >> "${OUT}"
echo -n '`' >> "${OUT}"

# Now build google-api-go-generator - we vendor so this is consistently reproducible
GEN_PATH="bin/google-api-go-generator"
if [ ! -f ${GEN_PATH} ]; then
	go build -o ${GEN_PATH} ${PKG}
fi

# Build the bindings
GOPATH=${PWD}/gopath ./bin/google-api-go-generator \
    -googleapi_pkg "google.golang.org/api/googleapi" \
    -api_json_file "${IN}" \
    -output "${TMPGEN}"


# Import the bindings
goimports -w ${TMPGEN}

# Prepend the license header to v1-gen.go
echo "${LICHDR}" > "${TMPLIC}"
cat "${TMPLIC}" "${TMPGEN}" > "${GEN}"
rm -f "${TMPLIC}" "${TMPGEN}"
