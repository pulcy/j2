[Unit]
Description=Main unit for test/db/db [slice 1]
Requires=docker.service
Requires=docker.service
After=docker.service
After=yard.service

[Service]
Restart=on-failure
RestartSec=1
StartLimitInterval=300s
StartLimitBurst=3
TimeoutStartSec=0
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/docker pull redis:latest
ExecStartPre=-/usr/bin/docker stop -t 10 test-db-db-1
ExecStartPre=-/usr/bin/docker rm -f test-db-db-1
ExecStartPre=/bin/sh -c 'test -e /var/run/docker.sock || mkdir -p /var/run/docker.sock'
ExecStartPre=/bin/sh -c 'test -e /etc || mkdir -p /etc'
ExecStart=/usr/bin/docker run --rm --name test-db-db-1 -P -v /var/run/docker.sock:/tmp/docker.sock -v /etc:/etc -e SERVICE_NAME=test-db-db redis:latest
ExecStartPost=/bin/sh -c 'echo eyJzZWxlY3RvcnMiOlt7ImRvbWFpbiI6InRlc3QuZGIuZGIucHJpdmF0ZSIsInBvcnQiOjgwLCJwcml2YXRlIjp0cnVlfV0sInNlcnZpY2UiOiJ0ZXN0LWRiLWRiIn0= | base64 -d | /usr/bin/etcdctl set /pulcy/frontend/test-db-db'
ExecStop=-/usr/bin/docker stop -t 10 test-db-db-1
ExecStopPost=-/usr/bin/docker rm -f test-db-db-1

[X-Fleet]
Conflicts=test-db-db@*.service

[X-testproject]
GeneratedBy="testproject test-version, build test-build"
FrontEndRegistration="/pulcy/frontend/test-db-db={\"selectors\":[{\"domain\":\"test.db.db.private\",\"port\":80,\"private\":true}],\"service\":\"test-db-db\"}"
